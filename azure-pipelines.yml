# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  vmImageName: 'windows-latest'

stages:
- stage: install_env
  displayName: Install Environment
  jobs:
  - job: install_netcore21
    displayName: Install .Net Core 2.1 framework
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: none
    - task: UseDotNet@2
      displayName: 'Install .Net Core 2.1 framework'
      inputs:
        version: 2.1.x
        packageType: 'sdk'
  - job: install_netcore31
    displayName: Install .Net Core 3.1 framework
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: none
    - task: UseDotNet@2
      displayName: 'Install .Net Core 3.1 framework'
      inputs:
        version: 3.1.x
        packageType: 'sdk'
- stage: build
  displayName: Build
  jobs: 
  - job: build_netstandard20
    displayName: Build with .Net Standard 2.0 framework
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build with .Net Standard 2.0 framework
      inputs:
        command: build
        projects: 'CloudFlare.Client/CloudFlare.Client.csproj'
        arguments: '--framework:netstandard2.0 --configuration $(buildConfiguration)'
  - job: build_netstandard21
    displayName: Build with .Net Standard 2.1 framework
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build with .Net Standard 2.1 framework
      inputs:
        command: build
        projects: 'CloudFlare.Client/CloudFlare.Client.csproj'
        arguments: '--framework:netstandard2.1 --configuration $(buildConfiguration)'
  - job: build_netcore21
    displayName: Build with .Net Core 2.1 framework
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build with .Net Core 2.1 framework
      inputs:
        command: build
        projects: 'CloudFlare.Client/CloudFlare.Client.csproj'
        arguments: '--framework:netcoreapp2.1 --configuration $(buildConfiguration)'
  - job: build_netcore31
    displayName: Build with .Net Core 3.1 framework
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build with .Net Core 3.1 framework
      inputs:
        command: build
        projects: 'CloudFlare.Client/CloudFlare.Client.csproj'
        arguments: '--framework:netcoreapp3.1 --configuration $(buildConfiguration)'
- stage: run_test
  displayName: Run Tests
  jobs: 
  - job: test_netcore21
    displayName: Test with .Net Core 2.1 framework
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Test with .Net Core 2.1 framework
      env:
        ApiKey: $(ApiKey)
        EmailAddress: $(EmailAddress)
      inputs:
        command: test
        projects: 'CloudFlare.Client.Test/CloudFlare.Client.Test.csproj'
        arguments: '--logger trx --framework:netcoreapp2.1 --configuration $(buildConfiguration) --collect "Code coverage"'
  - job: test_netcore31
    displayName: Test with .Net Core 3.1 framework
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Test with .Net Core 3.1 framework'
      env:
        ApiKey: $(ApiKey)
        EmailAddress: $(EmailAddress)
      inputs:
        command: test
        projects: 'CloudFlare.Client.Test/CloudFlare.Client.Test.csproj'
#         arguments: '--framework:netcoreapp3.1 --configuration $(buildConfiguration) --collect "Code coverage"'
# - stage: deploy_nuget
#   displayName: Deploy to nuget.org
#   condition: and(succeeded(), variables['Build.SourceBranch'], 'refs/tags/'))
#   tag name Build.SourceBranchName